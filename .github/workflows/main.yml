  name: CI/CD Pipeline
  on:
    push:
      branches:
        - main

  jobs:
    build_project:
      runs-on: self-hosted
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Install Node.js
          run: sudo apt-get update && sudo apt-get install -y nodejs npm

        - name: Build Project
          run: npm install && npm run build --if-present

    build_image:
      runs-on: self-hosted
      needs: build_project
      steps:
        - name: Build Docker Image
          run: docker build -t sakthisiddu1/helloservice:${{ github.run_number }} .

    push_image:
      runs-on: self-hosted
      needs: build_image
      steps:
        - name: Log in to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

        - name: Push Docker Image
          run: docker push sakthisiddu1/helloservice:${{ github.run_number }}

    deploy:
      runs-on: self-hosted
      needs: push_image
      steps:
        - name: Create Deployment File
          run: |
            echo "
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: helloservice-deployment
            spec:
              replicas: 2
              selector:
                matchLabels:
                  app: helloservice
              template:
                metadata:
                  labels:
                    app: helloservice
                spec:
                  containers:
                  - name: helloservice
                    image: sakthisiddu1/helloservice:${{ github.run_number }}
                    ports:
                    - containerPort: 80
            " > deployment.yaml

        - name: Create Service File
          run: |
            echo "
            apiVersion: v1
            kind: Service
            metadata:
              name: helloservice-service
            spec:
              type: NodePort
              selector:
                app: helloservice
              ports:
                - protocol: TCP
                  port: 80
                  targetPort: 80
                  nodePort: 30007
            " > service.yaml

        - name: Deploy to Kubernetes
          run: |
            ssh -o StrictHostKeyChecking=no -i /home/ubuntu/.ssh/test.pem ubuntu@3.6.38.156 "kubectl apply -f -" < deployment.yaml
            ssh -i /home/ubuntu/.ssh/test.pem -o StrictHostKeyChecking=no ubuntu@3.6.38.156 "kubectl apply -f -" < service.yaml